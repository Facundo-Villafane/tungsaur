using UnityEngine;
using DialogueEditor;

public class StageOneManager : MonoBehaviour
{
    private ConversationController conversationController;
    private StageZone stageZone;

    private void Awake()
    {
        conversationController = GetComponent<ConversationController>();
        stageZone = GetComponent<StageZone>();
    }

    private void OnEnable()
    {
        // Suscribirse a los callbacks sin par√°metros
        ConversationManager.OnConversationStarted += OnConversationStarted;
        ConversationManager.OnConversationEnded += OnConversationEnded;
    }

    private void OnDisable()
    {
        ConversationManager.OnConversationStarted -= OnConversationStarted;
        ConversationManager.OnConversationEnded -= OnConversationEnded;
    }

    private void Start()
    {
        // Inicia la primera conversaci√≥n
        conversationController.StartConversation(0);
    }

    private void OnConversationStarted()
    {
        Debug.Log($"üí¨ Conversaci√≥n comenzada: {conversationController.CurrentConversation?.name}");
    }

    private void OnConversationEnded()
    {
        int index = conversationController.CurrentIndex;

        if (index == 0)
        {
            Debug.Log("‚úÖ Conversaci√≥n 0 terminada. Haciendo debug...");

            // Debug adicional
            Debug.Log("üîπ Debug: flujo correcto despu√©s de conversaci√≥n 0.");

            // Iniciar siguiente conversaci√≥n
            conversationController.StartNextConversation();
        }
        else if (index == 1)
        {
            Debug.Log("‚úÖ Conversaci√≥n 1 terminada. Haciendo debug...");

            Debug.Log("üîπ Debug: flujo correcto despu√©s de conversaci√≥n 1.");

            stageZone.EndStage();
        }
    }
}
